pico-8 cartridge // http://www.pico-8.com
version 41
__lua__

tile_size = 8

-- Definitions

Character = {
    pos = { x = 0, y = 0 },
    sprite_root = 0,
    current_sprite = 0,
    flip { x = false, y = false },
    speed = 1.0,
    walk_anim = {1},
    walking = false,
    current_frame = 1,
    anim_timer = 0,
    player_controlled = false,
    collided = false,
    direction = { x = 0, y = 0 }
}

function Character:new(o)
    o = o or {}
    setmetatable(o, self)
    self.__index = self
    return o
end

function Character:move(x, y)
    local old_pos_x = self.pos.x
    local old_pos_y = self.pos.y
    
    local is_moving = false
    local sprite = self.sprite_root

    local move_table = {
        {x = -1, y = 0, sprite_offset = 16, flip_x = true, flip_y = false},
        {x = 1, y = 0, sprite_offset = 16, flip_x = false, flip_y = false},
        {x = 0, y = -1, sprite_offset = 0, flip_x = false, flip_y = false},
        {x = 0, y = 1, sprite_offset = 0, flip_x = false, flip_y = true},
        {x = -1, y = -1, sprite_offset = 32, flip_x = true, flip_y = false},
        {x = -1, y = 1, sprite_offset = 32, flip_x = true, flip_y = true},
        {x = 1, y = -1, sprite_offset = 32, flip_x = false, flip_y = false},
        {x = 1, y = 1, sprite_offset = 32, flip_x = false, flip_y = true}
    }
    
    local move = nil
        for i = 1, #move_table do
        if move_table[i].x == x and move_table[i].y == y then
            move = move_table[i]
            break
        end
    end
    
    if move then
        self.pos.x += move.x * self.speed
        self.pos.y += move.y * self.speed
        self.flip.x = move.flip_x
        self.flip.y = move.flip_y
        sprite += move.sprite_offset
    end

    -- if is_moving then
    --     self.sprite = self.walk_anim[1]
    --     self.walking = true
    -- else
    --     self.sprite = sprite
    --     self.walking = false
    -- end
    self.current_sprite = sprite

    -- Simple collision check for now
    local character_map_x = flr((self.pos.x + 4) / tile_size)
    local character_map_y = flr((self.pos.y + 4) / tile_size)

    -- printh("Player is touching tile at map position (" .. character_map_x .. "," .. character_map_y .. ")")

    local collided = false

    if fget(mget(character_map_x, character_map_y), 0) then
        collided = true
        self.pos.x = old_pos_x
        self.pos.y = old_pos_y
    end
    
    self.collided = collided
    -- -- Update the timer
    -- self.anim_timer += 1

    -- -- If the timer has reached the animation speed, switch to the next frame
    -- if self.anim_timer >= 60 / 8 then
    --     self.anim_timer = 0
    --     self.current_frame = self.current_frame % #self.walk_anim + 1
    -- end
end

function Character:ai()
    local new_direction = {x = self.direction.x, y = self.direction.y}

    -- Randomly change direction
    if rnd(50) < 2 then
        rand_x = flr(rnd(3)) - 1
        rand_y = flr(rnd(3)) - 1

        if rand_x == self.direction.x or rand_y == self.direction.y then
            new_direction.x = rand_x
            new_direction.y = rand_y
        end

        self.direction = new_direction
    end
    
    if self.collided then        
        new_direction.x = rand_x
        new_direction.y = rand_y

        self.direction = new_direction
        self.collided = false
    end
end

function Character:draw()
    spr(self.current_sprite, self.pos.x, self.pos.y, 1, 1, self.flip.x, self.flip.y)
end

-- Setup

function setup_characters()
    player = Character:new{
        pos = { x = 20, y = 20 },
        sprite_root = 1,
        current_sprite = 1,
        flip = { x = true, x = false },
        speed = 1.0,
        walk_anim = { 1, 2 },
        walking = false,
        player_controlled = true
    }

    enemy = Character:new{
        pos = { x = 40, y = 40 },
        sprite_root = 9,
        current_sprite = 9,
        flip = { x = true, x = false },
        speed = 1.5,
        walk_anim = { 1 },
        walking = false,
        player_controlled = false
    }

    enemy.direction.x = -1
end

function _init()
    setup_characters()
end

function _update()
    -- player
    if btn(0) and btn(2) then -- up-left
        player:move(-1, -1)
    elseif btn(0) and btn(3) then -- down-left
        player:move(-1, 1)
    elseif btn(1) and btn(2) then -- up-right
        player:move(1, -1)
    elseif btn(1) and btn(3) then -- down-right
        player:move(1, 1)
    elseif btn(0) then -- left
        player:move(-1, 0)
    elseif btn(1) then -- right
        player:move(1, 0)
    elseif btn(2) then -- up
        player:move(0, -1)
    elseif btn(3) then -- down
        player:move(0, 1)
    end

    -- if btn(0) or btn(1) or btn(2) or btn(3) then
    --     player.walking = true
    -- else
    --     player.walking = false
    -- end

    enemy:move(enemy.direction.x, enemy.direction.y)
    enemy:ai()
end

-- function check_collision(x, y)
--     local box_a = abs_box(a)
--     local box_b = abs_box(b)
    
--     if box_a.x1 > box_b.x2 or
--        box_a.y1 > box_b.y2 or
--        box_b.x1 > box_a.x2 or
--        box_b.y1 > box_a.y2 then
--        return false
--     end
-- end

function _draw()
    cls()
    camera(-64 + player.pos.x, -64 + player.pos.y)

    -- map(player_map_x - 4, player_map_y - 4, 0, 0, player_map_x + 4, player_map_y + 4)
    map(0, 0, 0, 0)
    
    -- if player.walking then
    --     spr(player.walk_anim[current_frame] + player.sprite, player.x, player.y, 1, 1, player.flip.x, player.flip.y)
    -- else
    -- spr(player.current_sprite, player.x, player.y, 1, 1, player.flip.x, player.flip.y)
    -- end

    player:draw()
    enemy:draw()
end
__gfx__
00000000000000000000000000000000500000560010101000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000f00ff00f000ff01ff10ff00000506005011d1d1100000000000000000000000000000000000000000000000000000000000000000000000000000000
0070070011555511115555111155551105050500111111d000000000000000000000000000133100001331000013310000000000000000000000000000000000
00077000dd5555dddd5555dddd5555dd0050505001111111000000000000000000000000003bb300003bb300003bb30000000000000000000000000000000000
000770001dd55dd11dd55dd11dd55dd105050600111111d0000000000000000000000000003bb300003bb300003bb30000000000000000000000000000000000
00700700000000000f100000000001f0005050500111111100000000000000000000000000133100001331000013310000000000000000000000000000000000
00000000000000000010000000000100050505001111111000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000050101010000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000001d1f00001d1000001d1f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000dd10000fdd100000dd110000100600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000d5500011d5500000d5500000000000000000000000000000000000000000000133100001331000013310000000000000000000000000000000000
00000000000555f0000555f0000555f00000000000000000000000000000000000000000003bb300003bb300003bb30000000000000000000000000000000000
00000000000555f0000555f0000555f00000000000000000000000000000000000000000003bb300003bb300003bb30000000000000000000000000000000000
00000000000d5500000d5500011d5500000000000000000000000000000000000000000000133100001331000013310000000000000000000000000000000000
00000000000dd100000dd11000fdd100000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000001d1f00001d1f00001d100060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000ddf00000dd000000ddf0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000001ddd5f00dddd5f001ddd5f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000dd555f0fdd555f00dd555f0000000000000000000000000000000000000000000133100001331000013310000000000000000000000000000000000
0000000000d5555011d5555000d555500000000000000000000000000000000000000000003bb300003bb300003bb30000000000000000000000000000000000
00000000000555df100555df000555d00000000000000000000000000000000000000000003bb300003bb300003bb30000000000000000000000000000000000
000000000000dddd0000dddd0000dddd000000000000000000000000000000000000000000133100001331000013310000000000000000000000000000000000
0000000000000dd100000dd100001dd1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000100000001000011f10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0505050505050505050505050505050505050505050505050505050505050505050505050505040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0504040404040404040404040404040404040404040404040404040404040404040404040405040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0504040404040404040404040404040404040404040404040404040404040404040404040405040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0504040404040404040404040404040404040404040404040404040404040404040404040405040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0504040404040404040404040404040404040404040404040404040404040404040404040405040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0504040404040404040404040404040404040404040404040404040404040404040404040405040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0504040404040404040404040404040404040404040404040404040404040404040404040405040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0504040404040404040404040404040404040404040404040404040404040404040404040405040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0504040404040404040404040404040404040404040404040404040404040404040404040405040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0504040404040404040404040404040404040404040404040404040404040404040404040405040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0504040404040404040404040404040404040404040404040404040404040404040404040405040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0504040404040404040404040404040404040404040404040404040404040404040404040405040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0504040404040404040404040404040404040404040404040404040404040404040404040405040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0504040404040404040404040404040404040404040404040404040404040404040404040405040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0504040404040404040404040505050504040404040404040404040404040404040404040405040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0504040404040404040404040504040404040404040404040404040404040404040404040405040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0504040404040404040404040504050404040404040404040404040404040404040404040405040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0504040404040404040404040404040404040404040404040404040404040404040404040405040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0504040404040404040404040404040404040404040404040404040404040404040404040405040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0505050505050505050505050505050505050505050505050505050505050505050505050505040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1414141414141414140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1414141414141414140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1414141414141414140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1414140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
